# Generated by Django 5.2.6 on 2025-09-25 19:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Reference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entity', models.CharField(max_length=100)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Справочник',
                'verbose_name_plural': 'Справочники',
                'ordering': ['entity', 'name'],
                'unique_together': {('entity', 'name')},
            },
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('serial_number', models.CharField(max_length=50, unique=True, verbose_name='Зав. № машины')),
                ('serial_engine', models.CharField(blank=True, max_length=50, verbose_name='Зав. № двигателя')),
                ('serial_transmission', models.CharField(blank=True, max_length=50, verbose_name='Зав. № трансмиссии')),
                ('serial_drive_bridge', models.CharField(blank=True, max_length=50, verbose_name='Зав. № ведущего моста')),
                ('serial_steer_bridge', models.CharField(blank=True, max_length=50, verbose_name='Зав. № управляемого моста')),
                ('contract_number', models.CharField(blank=True, max_length=100, verbose_name='Договор поставки №, дата')),
                ('shipment_date', models.DateField(verbose_name='Дата отгрузки с завода')),
                ('consignee', models.CharField(blank=True, max_length=255, verbose_name='Грузополучатель (конечный потребитель)')),
                ('delivery_address', models.CharField(blank=True, max_length=255, verbose_name='Адрес поставки (эксплуатации)')),
                ('equipment', models.TextField(blank=True, verbose_name='Комплектация (доп. опции)')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='client_machines', to=settings.AUTH_USER_MODEL, verbose_name='Клиент')),
                ('service_company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_machines', to=settings.AUTH_USER_MODEL, verbose_name='Сервисная компания')),
                ('model_drive_bridge', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='machines_drive', to='silant.reference', verbose_name='Модель ведущего моста')),
                ('model_engine', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='machines_engine', to='silant.reference', verbose_name='Модель двигателя')),
                ('model_steer_bridge', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='machines_steer', to='silant.reference', verbose_name='Модель управляемого моста')),
                ('model_technique', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='machines_model', to='silant.reference', verbose_name='Модель техники')),
                ('model_transmission', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='machines_transmission', to='silant.reference', verbose_name='Модель трансмиссии')),
            ],
            options={
                'ordering': ['-shipment_date'],
            },
        ),
        migrations.CreateModel(
            name='Maintenance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('performed_date', models.DateField(db_index=True, verbose_name='Дата проведения ТО')),
                ('operating_hours', models.PositiveIntegerField(default=0, help_text='Моточасы на момент ТО', verbose_name='Наработка, м/час')),
                ('work_order_number', models.CharField(blank=True, max_length=100, verbose_name='№ заказ-наряда')),
                ('work_order_date', models.DateField(blank=True, null=True, verbose_name='Дата заказ-наряда')),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maintenances', to='silant.machine', verbose_name='Машина')),
                ('service_company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_maintenances', to=settings.AUTH_USER_MODEL, verbose_name='Сервисная компания')),
                ('kind', models.ForeignKey(help_text='Справочник: Вид ТО', on_delete=django.db.models.deletion.PROTECT, related_name='maintenance_kinds', to='silant.reference', verbose_name='Вид ТО')),
                ('organization', models.ForeignKey(help_text='Справочник: Организация ТО', on_delete=django.db.models.deletion.PROTECT, related_name='maintenance_organizations', to='silant.reference', verbose_name='Организация, проводившая ТО')),
            ],
            options={
                'verbose_name': 'ТО',
                'verbose_name_plural': 'ТО',
                'ordering': ['-performed_date', '-id'],
                'indexes': [models.Index(fields=['performed_date'], name='silant_main_perform_72d87a_idx'), models.Index(fields=['machine', 'performed_date'], name='silant_main_machine_f1c4f2_idx'), models.Index(fields=['service_company'], name='silant_main_service_dead3e_idx')],
            },
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('failure_date', models.DateField(db_index=True, verbose_name='Дата отказа')),
                ('operating_hours', models.PositiveIntegerField(default=0, verbose_name='Наработка, м/час')),
                ('failure_description', models.TextField(blank=True, verbose_name='Описание отказа')),
                ('parts_used', models.TextField(blank=True, verbose_name='Используемые запасные части')),
                ('recovery_date', models.DateField(blank=True, null=True, verbose_name='Дата восстановления')),
                ('downtime_days', models.PositiveIntegerField(default=0, editable=False, verbose_name='Время простоя техники (дни)')),
                ('service_company', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='service_complaints', to=settings.AUTH_USER_MODEL, verbose_name='Сервисная компания')),
                ('machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complaints', to='silant.machine', verbose_name='Машина')),
                ('failure_node', models.ForeignKey(help_text='Справочник: Узел отказа', on_delete=django.db.models.deletion.PROTECT, related_name='complaints_failure_node', to='silant.reference', verbose_name='Узел отказа')),
                ('recovery_method', models.ForeignKey(help_text='Справочник: Способ восстановления', on_delete=django.db.models.deletion.PROTECT, related_name='complaints_recovery_method', to='silant.reference', verbose_name='Способ восстановления')),
            ],
            options={
                'verbose_name': 'Рекламация',
                'verbose_name_plural': 'Рекламации',
                'ordering': ['-failure_date', '-id'],
                'indexes': [models.Index(fields=['failure_date'], name='silant_comp_failure_1c5cce_idx'), models.Index(fields=['machine', 'failure_date'], name='silant_comp_machine_f7ad0b_idx'), models.Index(fields=['service_company'], name='silant_comp_service_8b438f_idx')],
            },
        ),
    ]
